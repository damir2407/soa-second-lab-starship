plugins {
    id 'java'
    id 'org.jetbrains.kotlin.jvm' version '1.8.22'
    id 'org.jetbrains.kotlin.plugin.allopen' version '1.8.22'
    id 'org.jetbrains.kotlin.plugin.noarg' version '1.8.22'
    id 'war'
}

group 'ru.itmo.soa'
version '0.0.1'

repositories {
    mavenCentral()
}

ext {
    junitVersion = '5.9.2'
}


tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
    sourceCompatibility = '11'
    targetCompatibility = '11'
}

[compileKotlin, compileTestKotlin].forEach {
    it.kotlinOptions {
        jvmTarget = '11'
    }
}

allOpen {
    annotation('jakarta.ws.rs.Path')
    annotation('jakarta.enterprise.context.ApplicationScoped')
    annotation('jakarta.persistence.Entity')
    annotation('jakarta.persistence.Embeddable')
    annotation('jakarta.persistence.MappedSuperclass')
}

noArg {
    annotation('jakarta.persistence.Entity')
    annotation('jakarta.persistence.Embeddable')
    annotation('jakarta.persistence.MappedSuperclass')
}

dependencies {
    compileOnly('jakarta.enterprise:jakarta.enterprise.cdi-api:3.0.0')
//  compileOnly('jakarta.ws.rs:jakarta.ws.rs-api:3.0.0')
//  compileOnly('jakarta.servlet:jakarta.servlet-api:5.0.0')
//  implementation('org.glassfish.jaxb:jaxb-runtime:3.0.2')
//  implementation("org.glassfish.jersey.containers:jersey-container-servlet:2.34")
    implementation('javax.validation:validation-api:2.0.1.Final')
    implementation('javax.enterprise:cdi-api:2.0.SP1')
    implementation('javax.ejb:javax.ejb-api:3.2.2')
    implementation('javax.persistence:javax.persistence-api:2.2')
    compileOnly('javax.ws.rs:javax.ws.rs-api:2.1.1')
    implementation('javax.persistence:javax.persistence-api:2.2')
    implementation('org.jboss.ejb3:jboss-ejb3-ext-api:2.3.0.Final')
    implementation('javax.xml.bind:jaxb-api:2.3.1')
    compileOnly('org.jboss.resteasy:resteasy-jaxrs:3.15.6.Final')
    compileOnly 'org.projectlombok:lombok:1.18.30'
    runtimeOnly("org.postgresql:postgresql:42.6.0")
    implementation('com.fasterxml.jackson.jaxrs:jackson-jaxrs-providers:2.15.0')
    implementation('org.glassfish.jersey.media:jersey-media-json-jackson:3.1.1')
    implementation('com.fasterxml.jackson.datatype:jackson-datatype-jsr310')

    testImplementation("org.junit.jupiter:junit-jupiter-api:${junitVersion}")
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:${junitVersion}")
    implementation 'org.glassfish.jersey.media:jersey-media-multipart:2.34'
    implementation 'org.glassfish.jersey.containers:jersey-container-grizzly2-http:2.34'
    implementation("org.apache.cxf:cxf-rt-rs-security-cors:4.0.2")

}

test {
    useJUnitPlatform()
}